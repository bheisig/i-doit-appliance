#!/bin/bash

##
## i-doit virtual appliance
## Dialog
##

##
## Copyright (C) 2018 synetics GmbH, <https://i-doit.com/>
##
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU Affero General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
## GNU Affero General Public License for more details.
##
## You should have received a copy of the GNU Affero General Public License
## along with this program. If not, see <http://www.gnu.org/licenses/>.
##

## no -e for dialog buttons
set -uo pipefail
IFS=$'\n\t'

##
## Configuration
##

: "${DIALOG_OK=0}"
: "${DIALOG_CANCEL=1}"
: "${DIALOG_HELP=2}"
: "${DIALOG_EXTRA=3}"
: "${DIALOG_ITEM_HELP=4}"
: "${DIALOG_ESC=255}"

function execute {
    local applianceVersion=""
    local key=""
    local status=0
    local networkInterface=""

    exec 3>&1

    applianceVersion="$(cat /etc/appliance_version)"

    networkInterface="$(find /sys/class/net -type l -not -lname '*virtual*' -printf '%f\n')"

    key=$(dialog \
        --title "Network configuration" \
        --backtitle "i-doit virtual appliance ${applianceVersion}" \
        --ok-label "Enter" \
        --extra-button \
        --extra-label "Main menu" \
        --cancel-button "Exit" \
        --menu "Network interface: ${networkInterface}\\nUse arrows UP/DOWN\\nPress [Enter] to select" \
        23 43 14 \
        "S" "Static IP configuration" \
        "D" "Dynamic IP configuration (DHCP)" \
        2>&1 1>&3
    );

    status="$?"

    exec 3>&-

    case "$status" in
        "$DIALOG_OK")
            case "$key" in
                "S")
                    IFS=","
                    cmd=(dialog --nocancel --keep-tite --inputbox "IP ADDRESS (e.g. 10.0.0.2)" 8 51)
                    netIP=$("${cmd[@]}" 2>&1 >/dev/tty)
                    cmd=(dialog --nocancel --keep-tite --inputbox "SUBNET MASK (e.g. 255.255.255.0)" 8 51)
                    netMK=$("${cmd[@]}" 2>&1 >/dev/tty)
                    cmd=(dialog --nocancel --keep-tite --inputbox "DEFAULT GATEWAY (e.g. 10.0.0.1)" 8 51)
                    netGW=$("${cmd[@]}" 2>&1 >/dev/tty)
                    cmd=(dialog --nocancel --keep-tite --inputbox "NAMESERVER(S) (separated by ,)" 8 51)
                    netNS=$("${cmd[@]}" 2>&1 >/dev/tty)
                    cmd=(dialog --nocancel --keep-tite --inputbox "DNS DOMAIN (e.g. example.com)" 8 51)
                    netDM=$("${cmd[@]}" 2>&1 >/dev/tty)

                    {
                        echo "auto lo"
                        echo "iface lo inet loopback"
                        echo "allow-hotplug $networkInterface"
                        echo "iface $networkInterface inet static"
                        echo "    address $netIP"
                        echo "    netmask $netMK"
                        echo "    gateway $netGW"
                    } > /etc/network/interfaces || \
                        abort "Unable to edit /etc/network/interfaces"

                    {
                        echo "domain $netDM"
                        echo "search $netDM"
                    } > /etc/resolv.conf || \
                        abort "Unable to edit /etc/resolv.conf"

                    for nameserver in $netNS
                       do echo "nameserver $nameserver" >> /etc/resolv.conf
                    done
                    nohup sh -c \
                        "ifdown $networkInterface && ifup $networkInterface" \
                        > /dev/null 2>&1 || \
                        abort "Unable to configure network"
                    ;;
                "D")
                    {
                        echo "auto lo"
                        echo "iface lo inet loopback"
                        echo "allow-hotplug $networkInterface"
                        echo "iface $networkInterface inet dhcp"
                    } > /etc/network/interfaces || \
                        abort "Unable to configure network"
                    nohup sh -c \
                        "ifdown $networkInterface && ifup $networkInterface" \
                        > /dev/null 2>&1 || \
                        abort "Unable to configure network"
                    ;;
                *)
                    abort "Unknown choice"
            esac
            ;;
        "$DIALOG_EXTRA")
            appliance-menu
            exit 0
            ;;
        "$DIALOG_CANCEL")
            exit 0
            ;;
        "$DIALOG_ESC")
            exit 0
            ;;
        *)
            abort "Unknown action"
            ;;
    esac

    execute
}

function setup {
    test "$(whoami)" = "root" || \
        abort "Only user 'root' may execute this script"
}

function log {
    echo -e "$1"
}

function finish {
    printf "\\033c"
}

function abort {
    echo -e "$1" 1>&2
    exit 1
}

##--------------------------------------------------------------------------------------------------

if [[ "${BASH_SOURCE[0]}" = "$0" ]]; then
    setup && execute && finish
fi
